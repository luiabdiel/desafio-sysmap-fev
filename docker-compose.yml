services:
  # DB_CUSTOMER
  postgres:
    image: postgres:latest
    container_name: postgres-local
    restart: always
    environment:
      - POSTGRES_DB=db_customer
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=pass
    ports:
      - "5432:5432"
    tmpfs:
      - /var/lib/postgresql/data
    command: ["postgres", "-c", "fsync=off", "-c", "full_page_writes=off"]

  # DB_AUDIT
  postgres_audit:
    image: postgres:latest
    container_name: postgres-audit
    restart: always
    environment:
      - POSTGRES_DB=db_audit
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=pass
    ports:
      - "5433:5432"
    networks:
      - network-backend
    tmpfs:
      - /var/lib/postgresql/data
    command: ["postgres", "-c", "fsync=off", "-c", "full_page_writes=off"]

  # ZOOKEEPER
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper_container
    restart: always
    networks:
      - network-backend
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  # KAFKA
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka_container
    restart: always
    networks:
      - network-backend
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdrop_container
    restart: always
    networks:
      - network-backend
    depends_on:
      - kafka
    ports:
      - 9000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

networks:
  network-backend:
    driver: bridge
